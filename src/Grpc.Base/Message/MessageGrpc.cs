// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: message.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Grpc.Base {
  public static partial class MessageCall
  {
    static readonly string __ServiceName = "Grpc.Base.MessageCall";

    static readonly grpc::Marshaller<global::Grpc.Base.StreamBuffer> __Marshaller_Grpc_Base_StreamBuffer = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Grpc.Base.StreamBuffer.Parser.ParseFrom);

    static readonly grpc::Method<global::Grpc.Base.StreamBuffer, global::Grpc.Base.StreamBuffer> __Method_DuplexStreamingServerMethod = new grpc::Method<global::Grpc.Base.StreamBuffer, global::Grpc.Base.StreamBuffer>(
        grpc::MethodType.DuplexStreaming,
        __ServiceName,
        "DuplexStreamingServerMethod",
        __Marshaller_Grpc_Base_StreamBuffer,
        __Marshaller_Grpc_Base_StreamBuffer);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Grpc.Base.MessageReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of MessageCall</summary>
    public abstract partial class MessageCallBase
    {
      public virtual global::System.Threading.Tasks.Task DuplexStreamingServerMethod(grpc::IAsyncStreamReader<global::Grpc.Base.StreamBuffer> requestStream, grpc::IServerStreamWriter<global::Grpc.Base.StreamBuffer> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for MessageCall</summary>
    public partial class MessageCallClient : grpc::ClientBase<MessageCallClient>
    {
      /// <summary>Creates a new client for MessageCall</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public MessageCallClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for MessageCall that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public MessageCallClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected MessageCallClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected MessageCallClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual grpc::AsyncDuplexStreamingCall<global::Grpc.Base.StreamBuffer, global::Grpc.Base.StreamBuffer> DuplexStreamingServerMethod(grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DuplexStreamingServerMethod(new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncDuplexStreamingCall<global::Grpc.Base.StreamBuffer, global::Grpc.Base.StreamBuffer> DuplexStreamingServerMethod(grpc::CallOptions options)
      {
        return CallInvoker.AsyncDuplexStreamingCall(__Method_DuplexStreamingServerMethod, null, options);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override MessageCallClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new MessageCallClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(MessageCallBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_DuplexStreamingServerMethod, serviceImpl.DuplexStreamingServerMethod).Build();
    }

  }
}
#endregion
